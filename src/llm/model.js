/**
 * Module pour initialiser le mod√®le LLM
 */
const { Ollama } = require("langchain/llms/ollama");

/**
 * Retourne une instance du mod√®le Ollama configur√©e
 * @returns {Ollama} Instance du mod√®le
 */
function getOllamaModel() {
  // R√©cup√©rer la configuration depuis les variables d'environnement ou utiliser des valeurs par d√©faut
  const baseUrl = process.env.OLLAMA_BASE_URL || "http://localhost:11434";
  const model = process.env.OLLAMA_MODEL || "mistral";
  const temperature = parseFloat(process.env.OLLAMA_TEMPERATURE || "0.3");
  
  console.log(`üß† Mod√®le LLM: ${model} (${baseUrl})`);
  
  // G√©rer l'erreur "cannot unmarshal object into Go struct field GenerateRequest.prompt of type string"
  // Cette erreur se produit lorsque le prompt envoy√© √† Ollama n'est pas une cha√Æne de caract√®res
  return new Ollama({
    baseUrl: baseUrl,
    model: model,
    temperature: temperature,
    topP: 0.9,
    // Renforcer les instructions pour forcer les r√©ponses en fran√ßais
    systemPrompt: "Tu es un agent de garage automobile fran√ßais. TU DOIS R√âPONDRE EXCLUSIVEMENT EN FRAN√áAIS sans aucune exception. N'utilise JAMAIS l'anglais. R√©ponds de mani√®re claire, pr√©cise et concise, en fran√ßais uniquement, comme un agent de garage professionnel. √âvite les explications inutiles. Sois direct et courtois. Si tu r√©ponds en anglais, tu ne seras pas utile.",
    // Sp√©cifier le formateur pour s'assurer que le prompt soit toujours une cha√Æne de caract√®res
    formatMessages: async (messages) => {
      try {
        // V√©rifier si messages est une promesse
        if (typeof messages === 'object' && messages.then) {
          messages = await messages;
        }
        
        // S'assurer que le prompt est une cha√Æne de caract√®res
        if (typeof messages === 'object') {
          return JSON.stringify(messages);
        }
        
        if (typeof messages !== 'string') {
          return `Tu es un agent de garage automobile. L'utilisateur demande: ${messages}`;
        }
        
        return messages;
      } catch (error) {
        console.error("Erreur lors du formatage des messages:", error);
        return "Tu es un agent de garage automobile. R√©ponds en fran√ßais uniquement.";
      }
    }
  });
}

module.exports = { getOllamaModel }; 